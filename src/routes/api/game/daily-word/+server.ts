import { json } from '@sveltejs/kit';
import { db } from '$lib/server/db';
import { dailyWord } from '$lib/server/db/schema';
import { eq } from 'drizzle-orm';
import { getTodaysDate } from '$lib/server/utils';
import type { RequestHandler } from './$types';

// Predefined list of 5-letter words for the game
const WORD_LIST = [
	'ABODE',
	'ABOUT',
	'ABOVE',
	'ABUSE',
	'ACTOR',
	'ACUTE',
	'ADMIT',
	'ADOPT',
	'ADULT',
	'AFTER',
	'AGAIN',
	'AGENT',
	'AGREE',
	'AHEAD',
	'ALARM',
	'ALBUM',
	'ALERT',
	'ALIEN',
	'ALIGN',
	'ALIKE',
	'ALIVE',
	'ALLOW',
	'ALONE',
	'ALONG',
	'ALTER',
	'AMONG',
	'ANGER',
	'ANGLE',
	'ANGRY',
	'APART',
	'APPLE',
	'APPLY',
	'ARENA',
	'ARGUE',
	'ARISE',
	'ARRAY',
	'ASIDE',
	'ASSET',
	'AUDIO',
	'AUDIT',
	'AVOID',
	'AWAKE',
	'AWARD',
	'AWARE',
	'BADLY',
	'BAKER',
	'BASES',
	'BASIC',
	'BATCH',
	'BEACH',
	'BEGAN',
	'BEGIN',
	'BEING',
	'BELOW',
	'BENCH',
	'BILLY',
	'BIRTH',
	'BLACK',
	'BLAME',
	'BLANK',
	'BLAST',
	'BLIND',
	'BLOCK',
	'BLOOD',
	'BOARD',
	'BOOST',
	'BOOTH',
	'BOUND',
	'BRAIN',
	'BRAND',
	'BRASS',
	'BRAVE',
	'BREAD',
	'BREAK',
	'BREED',
	'BRIEF',
	'BRING',
	'BROAD',
	'BROKE',
	'BROWN',
	'BUILD',
	'BUILT',
	'BUYER',
	'CABLE',
	'CALIF',
	'CARRY',
	'CATCH',
	'CAUSE',
	'CHAIN',
	'CHAIR',
	'CHAOS',
	'CHARM',
	'CHART',
	'CHASE',
	'CHEAP',
	'CHECK',
	'CHEST',
	'CHIEF',
	'CHILD',
	'CHINA',
	'CHOSE',
	'CIVIC',
	'CIVIL',
	'CLAIM',
	'CLASS',
	'CLEAN',
	'CLEAR',
	'CLICK',
	'CLIMB',
	'CLOCK',
	'CLOSE',
	'CLOUD',
	'COACH',
	'COAST',
	'COULD',
	'COUNT',
	'COURT',
	'COVER',
	'CRAFT',
	'CRASH',
	'CRAZY',
	'CREAM',
	'CRIME',
	'CROSS',
	'CROWD',
	'CROWN',
	'CRUDE',
	'CURVE',
	'CYCLE',
	'DAILY',
	'DANCE',
	'DATED',
	'DEALT',
	'DEATH',
	'DEBUT',
	'DELAY',
	'DEPTH',
	'DOING',
	'DOUBT',
	'DOZEN',
	'DRAFT',
	'DRAMA',
	'DRANK',
	'DRAW',
	'DREAM',
	'DRESS',
	'DRILL',
	'DRINK',
	'DRIVE',
	'DROVE',
	'DYING',
	'EAGER',
	'EARLY',
	'EARTH',
	'EIGHT',
	'ELITE',
	'EMPTY',
	'ENEMY',
	'ENJOY',
	'ENTER',
	'ENTRY',
	'EQUAL',
	'ERROR',
	'EVENT',
	'EVERY',
	'EXACT',
	'EXIST',
	'EXTRA',
	'FAITH',
	'FALSE',
	'FAULT',
	'FIBER',
	'FIELD',
	'FIFTH',
	'FIFTY',
	'FIGHT',
	'FINAL',
	'FIRST',
	'FIXED',
	'FLASH',
	'FLEET',
	'FLOOR',
	'FLUID',
	'FOCUS',
	'FORCE',
	'FORTH',
	'FORTY',
	'FORUM',
	'FOUND',
	'FRAME',
	'FRANK',
	'FRAUD',
	'FRESH',
	'FRONT',
	'FRUIT',
	'FULLY',
	'FUNNY',
	'GIANT',
	'GIVEN',
	'GLASS',
	'GLOBE',
	'GOING',
	'GRACE',
	'GRADE',
	'GRAND',
	'GRANT',
	'GRASS',
	'GRAVE',
	'GREAT',
	'GREEN',
	'GROSS',
	'GROUP',
	'GROWN',
	'GUARD',
	'GUESS',
	'GUEST',
	'GUIDE',
	'HAPPY',
	'HARRY',
	'HEART',
	'HEAVY',
	'HENCE',
	'HENRY',
	'HORSE',
	'HOTEL',
	'HOUSE',
	'HUMAN',
	'IDEAL',
	'IMAGE',
	'INDEX',
	'INNER',
	'INPUT',
	'ISSUE',
	'JAPAN',
	'JIMMY',
	'JOINT',
	'JONES',
	'JUDGE',
	'KNOWN',
	'LABEL',
	'LARGE',
	'LASER',
	'LATER',
	'LAUGH',
	'LAYER',
	'LEARN',
	'LEASE',
	'LEAST',
	'LEAVE',
	'LEGAL',
	'LEVEL',
	'LEWIS',
	'LIGHT',
	'LIMIT',
	'LINKS',
	'LIVES',
	'LOCAL',
	'LOGIC',
	'LOOSE',
	'LOWER',
	'LUCKY',
	'LUNCH',
	'LYING',
	'MAGIC',
	'MAJOR',
	'MAKER',
	'MARCH',
	'MARIA',
	'MATCH',
	'MAYBE',
	'MAYOR',
	'MEANT',
	'MEDIA',
	'METAL',
	'MIGHT',
	'MINOR',
	'MINUS',
	'MIXED',
	'MODEL',
	'MONEY',
	'MONTH',
	'MORAL',
	'MOTOR',
	'MOUNT',
	'MOUSE',
	'MOUTH',
	'MOVED',
	'MOVIE',
	'MUSIC',
	'NEEDS',
	'NEVER',
	'NEWLY',
	'NIGHT',
	'NOISE',
	'NORTH',
	'NOTED',
	'NOVEL',
	'NURSE',
	'OCCUR',
	'OCEAN',
	'OFFER',
	'OFTEN',
	'ORDER',
	'OTHER',
	'OUGHT',
	'PAINT',
	'PANEL',
	'PAPER',
	'PARTY',
	'PEACE',
	'PETER',
	'PHASE',
	'PHONE',
	'PHOTO',
	'PIANO',
	'PIECE',
	'PILOT',
	'PITCH',
	'PLACE',
	'PLAIN',
	'PLANE',
	'PLANT',
	'PLATE',
	'POINT',
	'POUND',
	'POWER',
	'PRESS',
	'PRICE',
	'PRIDE',
	'PRIME',
	'PRINT',
	'PRIOR',
	'PRIZE',
	'PROOF',
	'PROUD',
	'PROVE',
	'QUEEN',
	'QUICK',
	'QUIET',
	'QUITE',
	'RADIO',
	'RAISE',
	'RANGE',
	'RAPID',
	'RATIO',
	'REACH',
	'READY',
	'REALM',
	'REBEL',
	'REFER',
	'RELAX',
	'REPLY',
	'RIGHT',
	'RIVAL',
	'RIVER',
	'ROBIN',
	'ROGER',
	'ROMAN',
	'ROUGH',
	'ROUND',
	'ROUTE',
	'ROYAL',
	'RURAL',
	'SCALE',
	'SCENE',
	'SCOPE',
	'SCORE',
	'SENSE',
	'SERVE',
	'SEVEN',
	'SHALL',
	'SHAPE',
	'SHARE',
	'SHARP',
	'SHEET',
	'SHELF',
	'SHELL',
	'SHIFT',
	'SHINE',
	'SHIRT',
	'SHOCK',
	'SHOOT',
	'SHORT',
	'SHOWN',
	'SIGHT',
	'SILLY',
	'SINCE',
	'SIXTH',
	'SIXTY',
	'SIZED',
	'SKILL',
	'SLEEP',
	'SLIDE',
	'SMALL',
	'SMART',
	'SMILE',
	'SMITH',
	'SMOKE',
	'SNAKE',
	'SNOW',
	'SOLID',
	'SOLVE',
	'SORRY',
	'SOUND',
	'SOUTH',
	'SPACE',
	'SPARE',
	'SPEAK',
	'SPEED',
	'SPEND',
	'SPENT',
	'SPLIT',
	'SPOKE',
	'SPORT',
	'STAFF',
	'STAGE',
	'STAKE',
	'STAND',
	'START',
	'STATE',
	'STEAM',
	'STEEL',
	'STEEP',
	'STICK',
	'STILL',
	'STOCK',
	'STONE',
	'STOOD',
	'STORE',
	'STORM',
	'STORY',
	'STRIP',
	'STUCK',
	'STUDY',
	'STUFF',
	'STYLE',
	'SUGAR',
	'SUITE',
	'SUPER',
	'SWEET',
	'TABLE',
	'TAKEN',
	'TASTE',
	'TAXES',
	'TEACH',
	'TEETH',
	'TERRY',
	'TEXAS',
	'THANK',
	'THEFT',
	'THEIR',
	'THEME',
	'THERE',
	'THESE',
	'THICK',
	'THING',
	'THINK',
	'THIRD',
	'THOSE',
	'THREE',
	'THREW',
	'THROW',
	'THUMB',
	'TIGER',
	'TIGHT',
	'TIRED',
	'TITLE',
	'TODAY',
	'TOPIC',
	'TOTAL',
	'TOUCH',
	'TOUGH',
	'TOWER',
	'TRACK',
	'TRADE',
	'TRAIN',
	'TREAT',
	'TREND',
	'TRIAL',
	'TRIBE',
	'TRICK',
	'TRIED',
	'TRIES',
	'TRIP',
	'TRUCK',
	'TRULY',
	'TRUNK',
	'TRUST',
	'TRUTH',
	'TWICE',
	'UNCLE',
	'UNDER',
	'UNDUE',
	'UNION',
	'UNITY',
	'UNTIL',
	'UPPER',
	'UPSET',
	'URBAN',
	'USAGE',
	'USUAL',
	'VALID',
	'VALUE',
	'VIDEO',
	'VIRUS',
	'VISIT',
	'VITAL',
	'VOCAL',
	'VOICE',
	'WASTE',
	'WATCH',
	'WATER',
	'WHEEL',
	'WHERE',
	'WHICH',
	'WHILE',
	'WHITE',
	'WHOLE',
	'WHOSE',
	'WOMAN',
	'WORLD',
	'WORRY',
	'WORSE',
	'WORST',
	'WORTH',
	'WOULD',
	'WRITE',
	'WRONG',
	'WROTE',
	'YOUNG',
	'YOUTH'
];

function getWordForDate(date: string): string {
	// Use a simple hash of the date to get a consistent word for each day
	const hash = date.split('').reduce((a, b) => {
		a = (a << 5) - a + b.charCodeAt(0);
		return a & a;
	}, 0);
	const index = Math.abs(hash) % WORD_LIST.length;
	return WORD_LIST[index];
}

export const GET: RequestHandler = async () => {
	try {
		const today = getTodaysDate();

		// Check if we already have a word for today
		let todaysWord = await db.query.dailyWord.findFirst({
			where: eq(dailyWord.date, today)
		});

		// If no word exists for today, create one
		if (!todaysWord) {
			const word = getWordForDate(today);
			const [newWord] = await db
				.insert(dailyWord)
				.values({
					word,
					date: today
				})
				.returning();
			todaysWord = newWord;
		}

		return json({
			id: todaysWord.id,
			date: todaysWord.date,
			// Don't return the actual word to the client!
			wordLength: todaysWord.word.length
		});
	} catch (error) {
		console.error('Error getting daily word:', error);
		return json({ error: 'Failed to get daily word' }, { status: 500 });
	}
};
